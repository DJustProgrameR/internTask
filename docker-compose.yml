version: '3.8'

services:
  avito-pvz-service:
    build: .
    container_name: avito-pvz-service
    ports:
      - "8080:8080"
      - "9000:9000"
      - "3000:3000"
    environment:
      # енвы подключения к БД
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=postgres
      - DATABASE_HOST=postgres
      - MIGRATIONS_DIR=migrations
      # порт сервиса
      - SERVER_PORT=8080
      # уровень выводимых логов
      - LOG_LEVEL=dev
      # порт prometheus
      - PROM_PORT=9000
      # порт grpc
      - GRPC_PORT=3000
      # JWT секрет
      - JWT_SECRET=07jvv08nv40v3t9t9y9[tvtq
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    networks:
      - internal

  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal
networks:
  internal:
volumes:
  grafana_data: